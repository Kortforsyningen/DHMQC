-- Database for dhmqc
-- DROP DATABASE dhmqc;

CREATE DATABASE dhmqc
  WITH OWNER = postgres
       ENCODING = 'UTF8'
       TABLESPACE = pg_default
       LC_COLLATE = 'Danish_Denmark.1252'
       LC_CTYPE = 'Danish_Denmark.1252'
       CONNECTION LIMIT = -1;

create extension postgis;	   

CREATE SCHEMA dhmqc
  AUTHORIZATION postgres;
  
-- use ogr2ogr from the prompt to read the 1km tiles 
-- ogr2ogr -f "PostgreSQL" PG:"host=*HOST* user=postgres dbname=dhmqc password=postgres" 1km_Tiles.shp -nln dhmqc.f_dk1km -skipfailures -overwrite -a_srs EPSG:25832 -s_srs EPSG:25832


-- create tables to store the results: 

CREATE TABLE dhmqc.f_zcheck 
( ogc_fid serial NOT NULL,
  km_name character varying(15),
  id1 integer,
  id2 integer,
  mean_val real,
  sigma_naught real,
  wkb_geometry geometry,
  CONSTRAINT zcheck_pkey PRIMARY KEY (ogc_fid))
  with (OIDS=FALSE); 
ALTER TABLE dhmqc.f_zcheck
  OWNER TO postgres;  
  
CREATE INDEX zcheck_geom_idx
  ON dhmqc.f_zcheck
  USING gist
  (wkb_geometry);
	   

-- View: dhmqc.tile_precision
-- DROP VIEW dhmqc.tile_precision;


-- NEDENSTAAENDE ER IKKE TESTET!!! 

CREATE OR REPLACE VIEW dhmqc.tile_precision AS 
 SELECT km.wkb_geometry, 
    km.kn1kmdk AS tilename, 
    avg(zc.mean_val) AS avg
   FROM dhmqc.f_zcheck zc, 
    dhmqc.dk1km km
  WHERE km.kn1kmdk::text = zc.km_name::text
  GROUP BY km.kn1kmdk, km.wkb_geometry;

  
  
ALTER VIEW dhmqc.tile_precision
  OWNER TO postgres;
